/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *previous;
    TreeNode *first;
    TreeNode *second;
    void inorder(TreeNode* root)
    {
        if(root!=NULL)
        {
           inorder(root->left);
           if(first == NULL&&previous->val>root->val)
           {
              first=previous; 
           }
           if(first!=NULL&&previous->val>root->val)
           {
              second=root; 
           }
           previous = root;
           inorder(root->right);  
        }
    }
    void recoverTree(TreeNode* root) {
        previous=new TreeNode(INT_MIN);
        inorder(root);
        swap(first->val,second->val);
    }
};