class Solution {
public:
    vector<vector<int>> f_ans;
    void backtrack(vector<int> &nums,int i,int n,vector<int> &subs)
    {
      
        f_ans.push_back(subs);
        for(int j=i;j<n;j++)
        {
            if(j&&j>i&&nums[j-1]==nums[j])
            {
                continue;
            }
            subs.push_back(nums[j]);
            backtrack(nums,j+1,n,subs);
            subs.pop_back();
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<int> subs;
        sort(nums.begin(),nums.end());
        backtrack(nums,0,nums.size(),subs);
        return(f_ans);
        
    }
};