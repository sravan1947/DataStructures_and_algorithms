/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void post_Order(TreeNode *root,vector<int> &ans,int targetSum,vector<vector<int>> &f_ans)
    {
        if(root!=NULL)
        {
            if(targetSum-root->val==0&&root->left==NULL&&root->right==NULL)
            {
                ans.push_back(root->val);
                f_ans.push_back(ans);
                ans.pop_back();
                return;
            }
            ans.push_back(root->val);
            post_Order(root->left,ans,targetSum-root->val,f_ans);
            post_Order(root->right,ans,targetSum-root->val,f_ans);
            ans.pop_back();
            
        }
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> f_ans;
        vector<int> ans;
        post_Order(root,ans,targetSum,f_ans);
        return(f_ans);
    }
};