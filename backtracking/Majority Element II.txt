Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.


Input: nums = [3,2,3]
Output: [3]


input :nums= [2,2,2,3,3,3,1]

output : [2,3]


class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int ele1,ele2,c1=0,c2=0;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            if(ele1==nums[i])
            {
                c1++;
            }
            else
                if(ele2==nums[i])
                {
                    c2++;
                }
             else
                 if(c1==0)
                 {
                     ele1=nums[i];
                     c1++;
                 }
            else
                if(c2==0)
                {
                    ele2=nums[i];
                    c2++;
                }
            else
            {
                c1--;
                c2--;
            }
        }
        vector<int> ans;
         c1=0,c2=0;
        for(int i=0;i<n;i++)
        {
            if(ele1==nums[i])
            {
                c1++;
            }
            if(ele2==nums[i])
            {
                c2++;
            }
           
        }
         if(c1>n/3)
            {
                ans.push_back(ele1);
            }
            if(c2>n/3)
            {
                ans.push_back(ele2);
            }
        return(ans);
    }
};