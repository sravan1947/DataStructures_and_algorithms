//DFS solution
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    void level_order(map<int,vector<int>> &mp,Node *root,int i)
    {
        if(root!=NULL)
        {
            mp[i].push_back(root->val);
            int n=root->children.size();
         for(auto& it : root->children)
          {
             
             level_order(mp,it,i+1); 
          }
        }
    }
    vector<vector<int>> levelOrder(Node* root) {
    map<int,vector<int>> mp;
        level_order(mp,root,0);
        vector<vector<int>> ans;
        int n=mp.size();
        for(int i=0;i<n;i++)
        {
            ans.push_back(mp[i]);
        }
        return(ans);
    }
};