You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?


class Solution {
public:
    int dp[100000];
    int ans(int n)
    {
        if(n<0)
            return(0);
        if(n==0)
            return(1);
        if(dp[n]!=-1)
            return(dp[n]);
        return(dp[n]=ans(n-1)+ans(n-2));
    }
    int climbStairs(int n) {
        memset(dp,-1,sizeof(dp));
        return(ans(n));
    }
};

class Solution {
public:
    int dp[10000];
    int climbStairs(int n) {
         dp[0]=1;
         dp[1]=1;
        for(int i=2;i<=n;i++)
        {
            dp[i]=dp[i-1]+dp[i-2];
        }
        return(dp[n]);
    }
};