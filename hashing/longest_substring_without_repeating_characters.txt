Given a string s, find the length of the longest substring without repeating characters.

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_set<char> se;
        int n=s.length();
        int ans=0;
        int i=0;
        int j=i;
        for(i=0;i<n;i++)
        {
            if(!se.count(s[i]))
            {
                se.insert(s[i]);
            }
            else
            {
                while(s[j]!=s[i])
                {
                    se.erase(s[j]);
                    j++;
                }
                se.erase(s[j]);
                j++;
                se.insert(s[i]);
            }
            ans=max(ans,i-j+1);
           // cout<<ans<<endl;
        }
        return(ans);
    }
};