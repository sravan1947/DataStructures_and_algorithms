
Given the head of a linked list, remove the nth node 
from the end of the list and return its head.

 Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *p1=head,*p2=head,*ptr;
        int k=1;
        while(p2!=NULL)
        {
            if(k<n)
            {
                p2=p2->next;
                k++;
            }
            else
            {
                if(p2->next==NULL)
                {
                    if(p1==head)
                    {
                        head=head->next;
                        p1->next=NULL;
                    }
                    else
                    {
                        
                        ptr->next=p1->next;
                        p1->next=NULL;
                    }
                }
                else
                {
                    ptr=p1;
                  
                }
                 p1=p1->next;
                p2=p2->next;
            }
               
        }
        return(head);
            
    }
        
};