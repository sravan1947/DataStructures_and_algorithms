You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing 
together the nodes of the first two lists.

Return the head of the merged linked list.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode *pr,*t,*p=list1,*q=list2,*head=NULL;
        while(p!=NULL||q!=NULL)
        {
            if(q==NULL||(p!=NULL&&p->val<=q->val))
               {
                   t=p;
                   p=p->next;
               }
               else
               {
                   t=q;
                   q=q->next;
               }
               if(head==NULL)
               {
                   head=t;
                   t->next=NULL;
                   pr=head;
               }
               else
               {
                   pr->next=t;
                   t->next=NULL;
                   pr=t;
               }
        }
        return(head);
        
    }
};