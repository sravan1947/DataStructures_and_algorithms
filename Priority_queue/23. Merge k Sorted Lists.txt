/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode *head=NULL,*temp=NULL;
        priority_queue<pair<int,ListNode *>,vector<pair<int,ListNode *>>,greater<pair<int,ListNode *>>> pq;
        for(auto i:lists)
        {
            if(i)
              pq.push({i->val,i});
        }
        while(!pq.empty())
        {
            ListNode *curr=pq.top().second;
            pq.pop();
            if(head==NULL)
            {
                head=curr;
                temp=head;
            }
            else
            {
                temp->next=curr;
                temp=curr;
            }
            if(curr->next!=NULL)
            {
                pq.push({curr->next->val,curr->next});
            }
        }
        return(head);
    }
};