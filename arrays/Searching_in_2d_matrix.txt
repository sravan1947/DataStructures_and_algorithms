class Solution {
public:
    int search_row(vector<vector<int>> &matrix,int i,int n,int target)// Searching the row range 
    {
        int j=n-1;
        int ans=0;
        while(i<j)
        {
            int mid=(i+j)/2;
            if(matrix[mid].back()<target)
            {
               
                i=mid+1;
            }
            else if(matrix[mid][0]>target)
            {
               j=mid-1;
            }
            else
            {
               i=mid;
                break;
            }
            
        }
        return(i);
    }
     bool search_column(vector<vector<int>> &matrix,int k,int n,int target)
    {
        int i=0;
        int j=n-1;
        while(i<=j)
        {
            cout<<i<<j<<endl;
            int mid=(i+j)/2;
            if(matrix[k][mid]==target)
            {
                return(1);
            }
            if(matrix[k][mid]<target)
            {
                i=mid+1;
            }
            else
            {
                j=mid-1;
            }
        }
        return(0);
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size();
       int k= search_row(matrix,0,n,target);
        cout<<k<<endl;
        int m=matrix[k].size();
        return(search_column(matrix,k,m,target));
    }
};